name: Update existing droplet in Digital Ocean

on:
  push:
    branches:
      - master
jobs:
  test:
    name: Compile
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v1
    - name: Use Node.js
      uses: actions/setup-node@v1
    - name: npm install
      run: npm install
    - name: Build image
      run: docker build -t lunieapi . 
    - name: Save file
      run: docker save lunieapi | gzip > lunieapi.tgz
    - name: prepare to push to Digital Ocean
      run: mkdir -p ~/.ssh && echo "${{ secrets.DO_PRIVATE_KEY }}"  | tr -d '\r' > ~/.ssh/id_rsa && chmod 600 ~/.ssh/id_rsa && eval "$(ssh-agent -s)" && ssh-add ~/.ssh/id_rsa && ssh-keyscan -H 167.71.107.214 >> ~/.ssh/known_hosts
    - name: push to Digital Ocean
      run:  rsync -4 lunieapi.tgz root@167.71.107.214:~/ && rsync -4 pm2metrics.pl root@167.71.107.214:~/  && rsync -4 docker-compose.prod.yml root@167.71.107.214:~/ && rsync -4 Caddyfile.prod root@167.71.107.214:~/
    - name: Installing Docker Compose
      run: ssh root@167.71.107.214 "sudo curl -L \"https://github.com/docker/compose/releases/download/1.24.1/docker-compose-$(uname -s)-$(uname -m)\" -o /usr/local/bin/docker-compose; sudo chmod +x /usr/local/bin/docker-compose"
    - name: Run on Digital Ocean
      run: ssh root@167.71.107.214 "docker image prune -a -f; docker load < lunieapi.tgz; docker container stop lunieapi;docker container stop caddy; docker container stop node_exporter; docker container prune -f; docker-compose -f docker-compose.yml up --build -d"
    - name: Setting up cron job for pm2 metrics export
      run: ssh root@167.71.107.214 "mkdir /logs -p; touch /logs/show; line='*/1 * * * * docker exec lunieapi pm2 show 0 > /logs/show; perl /root/pm2metrics.pl'; crontab -l | grep -q 'lunieapi pm2' && true || (crontab  -l; echo "$line" ) | crontab -"
